version: "3.1"

volumes:
    mongodb: ~
    crate-db: ~
    grafana: ~
    fiware-drones-app: ~

services:
    iot-agent:
        image: fiware/iotagent-ul
        hostname: iot-agent
        container_name: fiware-iot-agent
        depends_on:
            - mongodb
        expose:
            - "4061"
            - "7896"
        ports:
            - "4061:4061"
            - "7896:7896"
        env_file:
            - .env

    mongodb:
        image: mongo:4.2
        hostname: mongodb
        container_name: db-mongo
        ports:
            - "27017:27017"
        command: --bind_ip_all
        volumes:
            - mongodb:/data

    orion:
        image: fiware/orion
        hostname: orion
        container_name: fiware-orion
        restart: always
        depends_on:
            - mongodb
        expose:
            - "1026"
        ports:
            - "1026:1026"
        command: -dbURI mongodb://mongodb:27017

    crate-db:
        image: crate:5.5.0
        hostname: crate-db
        container_name: db-crate
        ports:
            # Admin UI
            - "4200:4200"
            # Transport protocol
            - "4300:4300"
        command: ["crate",
              "-Ccluster.name=democluster",
              "-Cauth.host_based.enabled=false",
              "-Chttp.cors.enabled=true",
              "-Chttp.cors.allow-origin=*" ,
              "-Cdiscovery.type=single-node"
              ]          
        env_file:
            - .env
        volumes:
            - crate-db:/data

    # Quantum Leap is persisting Short Term History to Crate-DB
    quantumleap:
        image: fiware/quantum-leap
        hostname: quantumleap
        container_name: fiware-quantumleap
        ports:
            - "8668:8668"
        depends_on:
            - crate-db
        env_file:
            - .env
        healthcheck:
            test: curl --fail -s http://quantumleap:8668/version || exit 1
 
    grafana:
        image: grafana/grafana:8.5.27
        container_name: grafana
        depends_on:
            - crate-db
        ports:
            - "3003:3000"
        env_file:
            - .env
        volumes:
            - grafana:/var/lib/grafana

    fiware-drones-app:
        build:
            context: .
            dockerfile: Dockerfile  # Nombre de tu archivo Dockerfile
        container_name: fiware-drones-app
        expose:
            - "3000"
        ports:
            - "3000:3000"
        env_file:
            - .env
        volumes:
            - fiware-drones-app:/usr/src/app